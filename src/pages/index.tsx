import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { useState } from "react";
import Card from "../components/card/card";
import { useRouter } from "next/router";
import {trpc} from '../utils/trpc';


const Home: NextPage = () => {
 const {data: sessionData} = useSession()
 const router = useRouter()
 const [inputs, setInputs] = useState({
    title:'',
    website:'',
 })

 const {mutate} = trpc.card.publishCard.useMutation({
  onSuccess(card){
    console.log('PUBLISHED')
    router.push(`/c/${card.slug}`)
  },
 })

 const publish=()=> mutate(inputs)
  return (
    <>
      <Head>
        <title>{inputs.website}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-[calc(100vh-4rem)] flex-col items-center justify-center bg-gradient-to-br from-rose-300 to-purple-200 ">
        {!sessionData &&(
          <button onClick={sessionData? () =>signOut() :() =>signIn('google')} className="rounded-full bg-black/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-black/20">Sign in with Google</button>
        )}
        {/* Intro */}
        <div className="mx-auto max-w-7xl">
            <h2 className="mb-6 text-left text-3xl font-semibold text-white">Tell us About yourself</h2>
              <div className="mb-12 grid grid-cols-2 gap-8">
                  {/* input field 1 */}
                <div>
                      <label htmlFor="email" className="block text-sm font-medium text-white">
                        Title
                      </label>
                    <div className=" mt-1 ">
                      <input
                        value={inputs.title}
                        onChange={(e)=> setInputs((prev)=> ({...prev, title: e.target.value}))}
                        type="text"
                        name="title"
                        className="block w-full rounded-md border-gray-300 pl-7 pr-12 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                        placeholder="Software Engineer"
                      />
         
                    </div>
                </div>
                {/* input field 2 */}
                <div>
                      <label htmlFor="website" className="block text-sm font-medium text-white">
                        Website
                      </label>
                    <div className=" mt-1 ">
                      <input
                        value={inputs.website}
                        onChange= {(e)=>setInputs((prev)=>({...prev, website: e.target.value}))}
                        type="text"
                        name="website"
                        className="block w-full rounded-md border-gray-300 pl-7 pr-12 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                        placeholder="yoursite.com"
                      />
         
                    </div>
                </div>
              </div>
        </div>
          {/* {card} */}
          {sessionData && (
            <div className="flex flex-col items-center justify-center">
              <Card inputs={inputs}/>
            </div>
          )}
        {/* publish button */}
        <div className="mt-12 flex justify-center">
            <button type="button" onClick={publish} className='rounded-full bg-black/10 px-10 py-3 font-semibold tex-white no-underline transition hover:bg-black/20'>Publish</button>
        </div>
      </div>
    </>
  );
};

export default Home;